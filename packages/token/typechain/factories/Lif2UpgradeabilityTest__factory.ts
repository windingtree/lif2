/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Lif2UpgradeabilityTest,
  Lif2UpgradeabilityTestInterface,
} from "../Lif2UpgradeabilityTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Resurrect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Stopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newFunction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originalLif",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126cd806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063715018a6116100f9578063a9059cbb11610097578063c4d66de811610071578063c4d66de814610336578063d505accf14610349578063dd62ed3e1461035c578063f2fde38b1461039557600080fd5b8063a9059cbb14610309578063be9a65551461031c578063c43b1b471461032457600080fd5b80638456cb59116100d35780638456cb59146102c15780638da5cb5b146102c957806395d89b41146102ee578063a457c2d7146102f657600080fd5b8063715018a61461029357806375f12b211461029b5780637ecebe00146102ae57600080fd5b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461024f5780634e71d92d146102575780635c975abb1461025f57806370a082311461026a57600080fd5b8063313ce567146102255780633644e51514610234578063395093511461023c57600080fd5b806306fdde03146101ae57806307da68f5146101cc578063095ea7b3146101d657806318160ddd146101f95780631b28d63e1461020b57806323b872dd14610212575b600080fd5b6101b66103a8565b6040516101c39190612544565b60405180910390f35b6101d461043a565b005b6101e96101e43660046124c3565b610477565b60405190151581526020016101c3565b6035545b6040519081526020016101c3565b60016101e9565b6101e9610220366004612414565b61048d565b604051601281526020016101c3565b6101fd610539565b6101e961024a3660046124c3565b610548565b6101d4610584565b6101d46105b6565b60655460ff166101e9565b6101fd6102783660046123c6565b6001600160a01b031660009081526033602052604090205490565b6101d46108af565b61016254600160a01b900460ff166101e9565b6101fd6102bc3660046123c6565b6108e3565b6101d4610903565b6097546001600160a01b03165b6040516001600160a01b0390911681526020016101c3565b6101b6610935565b6101e96103043660046124c3565b610944565b6101e96103173660046124c3565b6109dd565b6101d4610a42565b610162546001600160a01b03166102d6565b6101d46103443660046123c6565b610a74565b6101d4610357366004612450565b610b68565b6101fd61036a3660046123e1565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6101d46103a33660046123c6565b610cae565b6060603680546103b79061264c565b80601f01602080910402602001604051908101604052809291908181526020018280546103e39061264c565b80156104305780601f1061040557610100808354040283529160200191610430565b820191906000526020600020905b81548152906001019060200180831161041357829003601f168201915b5050505050905090565b6097546001600160a01b0316331461046d5760405162461bcd60e51b8152600401610464906125c5565b60405180910390fd5b610475610d49565b565b6000610484338484610df2565b50600192915050565b600061049a848484610f16565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561051f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610464565b61052c8533858403610df2565b60019150505b9392505050565b60006105436110f1565b905090565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161048491859061057f9086906125fa565b610df2565b6097546001600160a01b031633146105ae5760405162461bcd60e51b8152600401610464906125c5565b61047561116c565b600261013054141561060a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610464565b600261013055600033610162546040516370a0823160e01b81526001600160a01b038084166004830152929350600092909116906370a082319060240160206040518083038186803b15801561065f57600080fd5b505afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610697919061250f565b9050600081116106e95760405162461bcd60e51b815260206004820152601b60248201527f436c61696d61626c653a206e6f7468696e6720746f20636c61696d00000000006044820152606401610464565b61016254610702906001600160a01b03168330846111e6565b610162546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a082319060240160206040518083038186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610780919061250f565b156107cd5760405162461bcd60e51b815260206004820152601d60248201527f436c61696d61626c653a20756e61626c6520746f207472616e736665720000006044820152606401610464565b6107d8308383610f16565b816001600160a01b03167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d48260405161081391815260200190565b60405180910390a26001600160a01b0382166000908152610163602052604090205480156108a4576001600160a01b03831660009081526101636020526040812055610860308483610f16565b826001600160a01b03167fa065a6bcbaa96b9d220b93617b9a6602d16a15aa84337912c99fc90e04d13cdb8260405161089b91815260200190565b60405180910390a25b505060016101305550565b6097546001600160a01b031633146108d95760405162461bcd60e51b8152600401610464906125c5565b6104756000611240565b6001600160a01b038116600090815260fd60205260408120545b92915050565b6097546001600160a01b0316331461092d5760405162461bcd60e51b8152600401610464906125c5565b610475611292565b6060603780546103b79061264c565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156109c65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610464565b6109d33385858403610df2565b5060019392505050565b60006001600160a01b038316301415610a385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a207472616e7366657220746f2074686520636f6e7472616374006044820152606401610464565b610532838361130d565b6097546001600160a01b03163314610a6c5760405162461bcd60e51b8152600401610464906125c5565b61047561131a565b600054610100900460ff1680610a8d575060005460ff16155b610aa95760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015610acb576000805461ffff19166101011790555b610b10604051806040016040528060088152602001672634b32a37b5b2b760c11b815250604051806040016040528060038152602001622624a360e91b81525061139e565b610b1861141e565b610b20611499565b610b49604051806040016040528060088152602001672634b32a37b5b2b760c11b815250611500565b610b528261158b565b8015610b64576000805461ff00191690555b5050565b83421115610bb85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610464565b600060fe54888888610bc98c6116f4565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c248261171c565b90506000610c348287878761176a565b9050896001600160a01b0316816001600160a01b031614610c975760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610464565b610ca28a8a8a610df2565b50505050505050505050565b6097546001600160a01b03163314610cd85760405162461bcd60e51b8152600401610464906125c5565b6001600160a01b038116610d3d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610464565b610d4681611240565b50565b61016254600160a01b900460ff1615610d995760405162461bcd60e51b815260206004820152601260248201527110db185a5b58589b194e881cdd1bdc1c195960721b6044820152606401610464565b610162805460ff60a01b1916600160a01b1790557f55c4adf1f68f084b809304657594a92ba835ada8d3b5340955bf05746723c05b610dd53390565b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610e545760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610464565b6001600160a01b038216610eb55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610464565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f7a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610464565b6001600160a01b038216610fdc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610464565b610fe7838383611792565b6001600160a01b0383166000908152603360205260409020548181101561105f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610464565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906110969084906125fa565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110e291815260200190565b60405180910390a35b50505050565b60006105437f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61112060c95490565b60ca546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60655460ff166111b55760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610464565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610dd5565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526110eb9085906117d8565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60655460ff16156112d85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610464565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610dd53390565b6000610484338484610f16565b61016254600160a01b900460ff166113695760405162461bcd60e51b815260206004820152601260248201527110db185a5b58589b194e881cdd185c9d195960721b6044820152606401610464565b610162805460ff60a01b191690557f27029695aa5f602a4ee81f4c32dfa86e562f200a17966496f3a7c3f2ec0f941733610dd5565b600054610100900460ff16806113b7575060005460ff16155b6113d35760405162461bcd60e51b815260040161046490612577565b600054610100900460ff161580156113f5576000805461ffff19166101011790555b6113fd6118aa565b6114078383611914565b8015611419576000805461ff00191690555b505050565b600054610100900460ff1680611437575060005460ff16155b6114535760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611475576000805461ffff19166101011790555b61147d6118aa565b6114856119a9565b8015610d46576000805461ff001916905550565b600054610100900460ff16806114b2575060005460ff16155b6114ce5760405162461bcd60e51b815260040161046490612577565b600054610100900460ff161580156114f0576000805461ffff19166101011790555b6114f86118aa565b611485611a1e565b600054610100900460ff1680611519575060005460ff16155b6115355760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611557576000805461ffff19166101011790555b61155f6118aa565b61158282604051806040016040528060018152602001603160f81b815250611a7e565b610b5282611b08565b600054610100900460ff16806115a4575060005460ff16155b6115c05760405162461bcd60e51b815260040161046490612577565b600054610100900460ff161580156115e2576000805461ffff19166101011790555b6001600160a01b0382166116385760405162461bcd60e51b815260206004820181905260248201527f436c61696d61626c653a20696e76616c696420746f6b656e20616464726573736044820152606401610464565b61016280546001600160a81b0319166001600160a01b03841617905561165c611b98565b6116ec3061016260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116af57600080fd5b505afa1580156116c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e7919061250f565b611bf7565b610b52611c01565b6001600160a01b038116600090815260fd602052604090208054600181018255905b50919050565b60006108fd6117296110f1565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061177b87878787611d8b565b9150915061178881611e78565b5095945050505050565b60655460ff16156114195760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610464565b600061182d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120339092919063ffffffff16565b805190915015611419578080602001905181019061184b91906124ed565b6114195760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610464565b600054610100900460ff16806118c3575060005460ff16155b6118df5760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611485576000805461ffff19166101011790558015610d46576000805461ff001916905550565b600054610100900460ff168061192d575060005460ff16155b6119495760405162461bcd60e51b815260040161046490612577565b600054610100900460ff1615801561196b576000805461ffff19166101011790555b825161197e906036906020860190612311565b508151611992906037906020850190612311565b508015611419576000805461ff0019169055505050565b600054610100900460ff16806119c2575060005460ff16155b6119de5760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611a00576000805461ffff19166101011790555b6065805460ff191690558015610d46576000805461ff001916905550565b600054610100900460ff1680611a37575060005460ff16155b611a535760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611a75576000805461ffff19166101011790555b61148533611240565b600054610100900460ff1680611a97575060005460ff16155b611ab35760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611ad5576000805461ffff19166101011790555b825160208085019190912083519184019190912060c99190915560ca558015611419576000805461ff0019169055505050565b600054610100900460ff1680611b21575060005460ff16155b611b3d5760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611b5f576000805461ffff19166101011790555b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960fe558015610b64576000805461ff00191690555050565b600054610100900460ff1680611bb1575060005460ff16155b611bcd5760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611bef576000805461ffff19166101011790555b61148561204a565b610b6482826120bb565b600054610100900460ff1680611c1a575060005460ff16155b611c365760405162461bcd60e51b815260040161046490612577565b600054610100900460ff16158015611c58576000805461ffff19166101011790555b7370997970c51812dc3a010c7d01b50e0d17dc79c860009081526101636020527fe7b3ce69b131f8c512bc70362a8abe4a5f081e49309955ca3709fda792ab94a98054690214e2a7766d89d800009290611cb39084906125fa565b9091555050733c44cdddb6a900fa2b585dd299e03d12fa4293bc60009081526101636020527fd8209803dc5119ab243b31766a0138d39b8881c699dcd8ea72979685497415518054690b02ecf74c31387fedf99290611d139084906125fa565b90915550507390f79bf6eb2c4f870365e785982e1f101e93b90660009081526101636020527f2fbad6c6db32930ab000296e8f69b4554874996512cbb29cdccae69fc9f32f2880546828b6c5bb47a018cc009290611d729084906125fa565b90915550508015610d46576000805461ff001916905550565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611dc25750600090506003611e6f565b8460ff16601b14158015611dda57508460ff16601c14155b15611deb5750600090506004611e6f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611e3f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e6857600060019250925050611e6f565b9150600090505b94509492505050565b6000816004811115611e8c57611e8c612681565b1415611e955750565b6001816004811115611ea957611ea9612681565b1415611ef75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610464565b6002816004811115611f0b57611f0b612681565b1415611f595760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610464565b6003816004811115611f6d57611f6d612681565b1415611fc65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610464565b6004816004811115611fda57611fda612681565b1415610d465760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610464565b606061204284846000856120c5565b949350505050565b600054610100900460ff1680612063575060005460ff16155b61207f5760405162461bcd60e51b815260040161046490612577565b600054610100900460ff161580156120a1576000805461ffff19166101011790555b6001610130558015610d46576000805461ff001916905550565b610b6482826121ed565b6060824710156121265760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610464565b843b6121745760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610464565b600080866001600160a01b031685876040516121909190612528565b60006040518083038185875af1925050503d80600081146121cd576040519150601f19603f3d011682016040523d82523d6000602084013e6121d2565b606091505b50915091506121e28282866122d8565b979650505050505050565b6001600160a01b0382166122435760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610464565b61224f60008383611792565b806035600082825461226191906125fa565b90915550506001600160a01b0382166000908152603360205260408120805483929061228e9084906125fa565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b606083156122e7575081610532565b8251156122f75782518084602001fd5b8160405162461bcd60e51b81526004016104649190612544565b82805461231d9061264c565b90600052602060002090601f01602090048101928261233f5760008555612385565b82601f1061235857805160ff1916838001178555612385565b82800160010185558215612385579182015b8281111561238557825182559160200191906001019061236a565b50612391929150612395565b5090565b5b808211156123915760008155600101612396565b80356001600160a01b03811681146123c157600080fd5b919050565b6000602082840312156123d857600080fd5b610532826123aa565b600080604083850312156123f457600080fd5b6123fd836123aa565b915061240b602084016123aa565b90509250929050565b60008060006060848603121561242957600080fd5b612432846123aa565b9250612440602085016123aa565b9150604084013590509250925092565b600080600080600080600060e0888a03121561246b57600080fd5b612474886123aa565b9650612482602089016123aa565b95506040880135945060608801359350608088013560ff811681146124a657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156124d657600080fd5b6124df836123aa565b946020939093013593505050565b6000602082840312156124ff57600080fd5b8151801515811461053257600080fd5b60006020828403121561252157600080fd5b5051919050565b6000825161253a818460208701612620565b9190910192915050565b6020815260008251806020840152612563816040850160208701612620565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561261b57634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561263b578181015183820152602001612623565b838111156110eb5750506000910152565b600181811c9082168061266057607f821691505b6020821081141561171657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220ca947438164b2dd812dfbd6977c048200fb047b6b8369241a174ad21c3f18bb064736f6c63430008070033";

export class Lif2UpgradeabilityTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lif2UpgradeabilityTest> {
    return super.deploy(overrides || {}) as Promise<Lif2UpgradeabilityTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lif2UpgradeabilityTest {
    return super.attach(address) as Lif2UpgradeabilityTest;
  }
  connect(signer: Signer): Lif2UpgradeabilityTest__factory {
    return super.connect(signer) as Lif2UpgradeabilityTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Lif2UpgradeabilityTestInterface {
    return new utils.Interface(_abi) as Lif2UpgradeabilityTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lif2UpgradeabilityTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Lif2UpgradeabilityTest;
  }
}
